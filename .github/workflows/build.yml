name: Tests

on: [push, pull_request]

jobs:
  run-tests-with-pip:
    name: ${{ matrix.os }}/py${{ matrix.PYTHON_VERSION }}/pip
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    env:
      MPLBACKEND: agg
      PIP_ARGS: -U --use-feature=2020-resolver -e
      PYTEST_ARGS: --pyargs kikuchipy
      PYTEST_ARGS_COVERAGE: --cov=.
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        PYTHON_VERSION: [3.7, 3.8]
        PIP_SELECTOR: ['[doc, tests]']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}
      - name: Display versions
        run: |
          python --version
          pip --version
      - name: Install package
        shell: bash
        run: |
          pip install ${{ env.PIP_ARGS }} .'${{ matrix.PIP_SELECTOR }}'
      - name: Run tests
        run: |
          pytest ${{ env.PYTEST_ARGS_COVERAGE }} ${{ env.PYTEST_ARGS }}
      - name: Generate line coverage
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: coverage report --show-missing
      - name: Upload coverage to Coveralls
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: AndreMiras/coveralls-python-action@develop